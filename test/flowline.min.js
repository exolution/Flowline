var Flowline=function(e,t){var n,r=[],s=0,i=0,l={},o=function(e){throw e instanceof Error?e:Error(e)},a={fail:function(e){o=e,2==i&&(i=0,this.reject.apply(this,n))},resolve:function(){if(r.length>s){var e,l=r[s++];if(l&&l.done!=t)if("function"==typeof l.done){try{e=l.done.apply(l.bind||this,arguments)}catch(o){this.reject(o)}l.done._promise||this.resolve.call(this,e)}else this.resolve.call(this,l.done)}else i=1,n=Array.prototype.slice.call(arguments)},resolveWith:function(e){if(r.length>s){var l,o=r[s++];if(o&&o.done!=t)if("function"==typeof o.done){var a=[this];Array.prototype.push.apply(a,arguments);try{l=o.done.apply(e||o.bind||this,a)}catch(p){}o.done._promise||this.resolveWith.call(this,e,l)}else this.resolve.call(this,o.done)}else i=1,n=Array.prototype.slice.call(arguments)},reject:function(){if(r.length>s){var e=r[s++];e&&("function"==typeof e.fail?e.fail.apply(this,arguments):o!=t&&o.apply(this,arguments))}else o!=t?o.apply(this,arguments):(i=2,n=Array.prototype.slice.call(arguments))},resume:function(){s--,0>s&&(s=0),this.resolve.apply(this,arguments)},then:function(e,s,l){return"function"==typeof e?r.push({done:e,fail:s,bind:l}):r.push({done:e}),1==i&&(i=0,this.resolve.apply(this,n)),2==i&&s!=t&&(i=0,this.reject.apply(this,n)),this}},p=function(){var e=arguments.length;if(e>0){s=0,a.length=0;for(var t=0;arguments.length>t;t++)a.then(arguments[t]);a.resolve()}return a};return p.promise=function(){return arguments.callee.caller._promise=!0,a},p.resolve=function(){a.resolve.apply(a,arguments)},p.reject=function(){a.reject.apply(a,arguments)},p.resume=function(){a.resume.apply(a,arguments)},p.after=function(e){var t=arguments.callee.caller;r.splice(s,0,{done:e},{done:t}),a.resolve.apply(a,Array.prototype.slice.call(arguments,1))},p.reset=function(){s=r.length=0,i=0,n=t},p.set=function(e,t){l[e]=t},p.get=function(e){return l[e]},p}(window);